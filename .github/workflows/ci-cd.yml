name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov

    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm install

    - name: Run backend tests
      run: |
        cd backend
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest --cov=app tests/ --cov-report=xml

    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v2
      with:
        files: ./backend/coverage.xml,./frontend/coverage/coverage-final.json

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build and push backend
      run: |
        cd backend
        zip -r ../backend.zip .
        aws s3 cp ../backend.zip s3://${{ secrets.EB_BUCKET }}/backend.zip
        aws elasticbeanstalk create-application-version \
          --application-name ${{ secrets.EB_APPLICATION }} \
          --version-label ${{ github.sha }} \
          --source-bundle S3Bucket=${{ secrets.EB_BUCKET }},S3Key=backend.zip
        aws elasticbeanstalk update-environment \
          --environment-name ${{ secrets.EB_ENVIRONMENT }} \
          --version-label ${{ github.sha }}

    - name: Build and deploy frontend
      run: |
        cd frontend
        npm run build
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET }} --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION }} --paths "/*"

    - name: Health check
      run: |
        sleep 60  # Wait for deployment to complete
        curl -f ${{ secrets.HEALTH_CHECK_URL }} || exit 1 